// @ts-check

import {
  assertEnvironment,
  moduleExport
} from '@-xun/symbiote/assets/eslint.config.mjs';

import { createDebugLogger } from 'rejoinder';

const debug = createDebugLogger({ namespace: 'symbiote:config:eslint' });

const config = await moduleExport({
  derivedAliases: getEslintAliases(),
  ...(await assertEnvironment())
});

config.push({
  /* Add custom config here, such as disabling certain rules */
});

export default config;

debug('exported config: %O', config);

function getEslintAliases() {
  // ! These aliases are auto-generated by symbiote. Instead of modifying them
  // ! directly, consider regenerating aliases across the entire project with:
  // ! `npx symbiote project renovate --regenerate-assets --assets-preset ...`
  return [
    ['multiverse+common:*', './packages/common/src/*'],
    ['multiverse+next-api:*', './packages/next-api/src/*'],
    ['multiverse+next-api-glue:*', './packages/next-api-glue/src/*'],
    ['multiverse+next-api-middleware:*', './packages/next-api-middleware/src/*'],
    ['multiverse+next-api-respond:*', './packages/next-api-respond/src/*'],
    ['multiverse+next-env:*', './packages/next-env/src/*'],
    ['multiverse+common', './packages/common/src/index.ts'],
    ['multiverse+next-api', './packages/next-api/src/index.ts'],
    ['multiverse+next-api-glue', './packages/next-api-glue/src/index.ts'],
    ['multiverse+next-api-middleware', './packages/next-api-middleware/src/index.ts'],
    ['multiverse+next-api-respond', './packages/next-api-respond/src/index.ts'],
    ['multiverse+next-env', './packages/next-env/src/index.ts'],
    ['rootverse+common:*', './packages/common/*'],
    ['rootverse+next-api:*', './packages/next-api/*'],
    ['rootverse+next-api-glue:*', './packages/next-api-glue/*'],
    ['rootverse+next-api-middleware:*', './packages/next-api-middleware/*'],
    ['rootverse+next-api-respond:*', './packages/next-api-respond/*'],
    ['rootverse+next-env:*', './packages/next-env/*'],
    ['rootverse:*', './*'],
    ['universe+common:*', './packages/common/src/*'],
    ['universe+next-api:*', './packages/next-api/src/*'],
    ['universe+next-api-glue:*', './packages/next-api-glue/src/*'],
    ['universe+next-api-middleware:*', './packages/next-api-middleware/src/*'],
    ['universe+next-api-respond:*', './packages/next-api-respond/src/*'],
    ['universe+next-env:*', './packages/next-env/src/*'],
    ['universe+common', './packages/common/src/index.ts'],
    ['universe+next-api', './packages/next-api/src/index.ts'],
    ['universe+next-api-glue', './packages/next-api-glue/src/index.ts'],
    ['universe+next-api-middleware', './packages/next-api-middleware/src/index.ts'],
    ['universe+next-api-respond', './packages/next-api-respond/src/index.ts'],
    ['universe+next-env', './packages/next-env/src/index.ts'],
    ['universe:*', './src/*'],
    ['universe', './src/index.ts'],
    ['testverse+common:*', './packages/common/test/*'],
    ['testverse+next-api:*', './packages/next-api/test/*'],
    ['testverse+next-api-glue:*', './packages/next-api-glue/test/*'],
    ['testverse+next-api-middleware:*', './packages/next-api-middleware/test/*'],
    ['testverse+next-api-respond:*', './packages/next-api-respond/test/*'],
    ['testverse+next-env:*', './packages/next-env/test/*'],
    ['testverse:*', './test/*'],
    ['typeverse:*', './types/*']
  ];
}
